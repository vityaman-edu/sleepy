sleepy: |-
  (if (eq 1 1) 1 1)

tafka: |-
  000. main:
  001.   %0: int = load $1: int
  002.   %1: int = load $1: int
  003.   %2: bool = eq %0: int, %1: int
  004.   if %2: bool then 0 else 1 next 2
  004. 0:
  005.   %3: int = load $1: int
  006.   goto 2
  006. 1:
  007.   %4: int = load $1: int
  008.   %3: int = copy %4: int
  009.   goto 2
  009. 2:
  010.   return %3: int

tafka-usages: |
  001. %0: r3 w0
  002. %1: r3 w0
  003. %0: r0 w0, %1: r0 w0, %2: r4 w0
  004. %2: r0 w0
  005. %3: r10 w0
  007. %4: r8 w0
  008. %3: r10 w0, %4: r0 w0
  010. %3: r0 w0


asmik-virt: |-
  memory stack
  0000: 1
  memory instr
  0000: addim v0, ze, 0
  0004: load v0, v0
  0008: addim v1, ze, 0
  0012: load v1, v1
  0016: slti v2, v0, v1
  0020: slti v3, v1, v0
  0024: orb v2, v2, v3
  0028: addim v4, ze, 18446744073709551615
  0032: xorb v2, v2, v4
  0036: addim v5, ze, 60
  0040: brn v2, v5
  0044: addim v6, ze, 0
  0048: load v6, v6
  0052: addim v7, ze, 80
  0056: brn ze, v7
  0060: addim v8, ze, 0
  0064: load v8, v8
  0068: addim v6, v8, 0
  0072: addim v9, ze, 80
  0076: brn ze, v9
  0080: addim a1, v6, 0
  0084: brn ze, ra

sleepy: |-
  (def a 1)
  (eq a 1)
  (def a 2)
  (eq a 2)
  (def a a)
  (eq a 3)

tafka: |-
  000. procedure @main() -> bool {
  000. main:
  001.   %0: int = load $1: int
  002.   %1: int = load $1: int
  003.   %2: bool = eq %0: int, %1: int
  004.   %3: int = load $2: int
  005.   %4: int = load $2: int
  006.   %5: bool = eq %3: int, %4: int
  007.   %6: int = load $3: int
  008.   %7: bool = eq %3: int, %6: int
  009.   return %7: bool
  009. }

tafka-usages: |
  $main: () -> bool:
  001. %0: r3 w0
  002. %1: r3 w0
  003. %0: r0 w0, %1: r0 w0, %2: r0 w0
  004. %3: r6 w0
  005. %4: r6 w0
  006. %3: r8 w0, %4: r0 w0, %5: r0 w0
  007. %6: r8 w0
  008. %3: r0 w0, %6: r0 w0, %7: r9 w0
  009. %7: r0 w0


asmik-virt: |-
  memory stack
  0000: 0
  0008: 1
  0016: 2
  0024: 3
  memory instr
  0000: addim v0, ze, 8
  0004: load v0, v0
  0008: addim v1, ze, 8
  0012: load v1, v1
  0016: slti v2, v0, v1
  0020: slti v3, v1, v0
  0024: orb v2, v2, v3
  0028: addim v4, ze, 18446744073709551615
  0032: xorb v2, v2, v4
  0036: addim v5, ze, 16
  0040: load v5, v5
  0044: addim v6, ze, 16
  0048: load v6, v6
  0052: slti v7, v5, v6
  0056: slti v8, v6, v5
  0060: orb v7, v7, v8
  0064: addim v9, ze, 18446744073709551615
  0068: xorb v7, v7, v9
  0072: addim v10, ze, 24
  0076: load v10, v10
  0080: slti v11, v5, v10
  0084: slti v12, v10, v5
  0088: orb v11, v11, v12
  0092: addim v13, ze, 18446744073709551615
  0096: xorb v11, v11, v13
  0100: addim a1, v11, 0
  0104: brn ze, ra
